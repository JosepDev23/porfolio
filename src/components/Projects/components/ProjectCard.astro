---
interface Props {
  imgSrc: string
  technologies: Technology[]
}

type Technology = 'TypeScript' | 'NestJS' | 'React' | 'ReactNative' | 'NextJS'

const { imgSrc, technologies }: Props = Astro.props
---

<div class="project-container">
  <div class="background" style={`background-image: url(${imgSrc});`}></div>
  {
    technologies.includes('TypeScript') && (
      <img src="img/logo_typescript.png" class="project-image" />
    )
  }
  {
    technologies.includes('NestJS') && (
      <img src="img/logo_nestjs.png" class="project-image" />
    )
  }
  {
    technologies.includes('React') && (
      <img src="img/logo_react.png" class="project-image" />
    )
  }
  {
    technologies.includes('ReactNative') && (
      <img src="img/logo_react_native.png" class="project-image" />
    )
  }
  {
    technologies.includes('NextJS') && (
      <img src="img/logo_nextjs.png" class="project-image" />
    )
  }
</div>

<style>
  .project-container {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 50rem;
    width: 50rem;
    margin: 2rem;
    border: solid var(--color-white);
    text-align: center;
  }

  .background {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-size: cover;
    background-position: center;
    z-index: 1;
    transition: filter 0.3s ease;
  }

  .project-container:hover .background {
    filter: blur(3px);
  }

  .project-image {
    position: relative;
    z-index: 2;
    height: 10rem;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .project-container:hover .project-image {
    opacity: 1;
  }
</style>
